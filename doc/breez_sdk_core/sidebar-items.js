window.SIDEBAR_ITEMS = {"enum":[["BreezEvent","Event emitted by the SDK. To listen for and react to these events, use an [EventListener] when initializing the [BreezServices]."],["ChannelState","State of a LN channel"],["EnvironmentType","Indicates the different kinds of supported environments for [crate::BreezServices]"],["FeeratePreset","Different types of supported feerates"],["InputType","Different kinds of inputs supported by [parse], including any relevant details extracted from the input."],["LnUrlPayResult","Contains the result of the entire LNURL-pay interaction, as reported by the LNURL endpoint."],["LnUrlRequestData","Generic struct containing the possible LNURL payloads returned when contacting a LNURL endpoint."],["LnUrlWithdrawCallbackStatus","Contains the result of the entire LNURL-withdraw interaction, as reported by the LNURL endpoint."],["Network","The different supported bitcoin networks"],["PaymentDetails","Wrapper for the different types of payments"],["PaymentType","Different types of supported payments"],["PaymentTypeFilter","Different types of supported filters which can be applied when retrieving the transaction list"],["SwapStatus","The status of a swap"]],"fn":[["mnemonic_to_seed","Attempts to convert the phrase to a mnemonic, then to a seed."],["parse","Parses generic user input, typically pasted from clipboard or scanned from a QR"],["parse_invoice","Parse a BOLT11 payment request and return a structure contains the parsed fields."]],"mod":[["binding","Bindings for the Dart integration"]],"struct":[["BitcoinAddressData","Wrapped in a [BitcoinAddress], this is the result of [parse] when given a plain or BIP-21 formatted on-chain bitcoin address"],["BreezServices","BreezServices is a facade and the single entry point for the SDK."],["Channel","LN channel managed by the LSP"],["ClosedChannelPaymentDetails","Details for a payment which closed a channel"],["Config","Configuration for the Breez Services."],["CurrencyInfo","Details about a supported currency in the fiat rate feed"],["FiatCurrency","Wrapper around the [CurrencyInfo] of a fiat currency"],["GreenlightCredentials","Client-specific credentials to connect to and manage a Greenlight node in the cloud"],["InvoicePaidDetails","Details of an invoice that has been paid, included as payload in an emitted [BreezEvent]"],["LNInvoice","Wrapper for a BOLT11 LN invoice"],["LnPaymentDetails","Details of a LN payment, as included in a [Payment]"],["LnUrlAuthRequestData","Wrapped in a [LnUrlAuth], this is the result of [parse] when given a LNURL-auth endpoint."],["LnUrlErrorData","Wrapped in a [LnUrlError], this represents a LNURL-endpoint error."],["LnUrlPayRequestData","Wrapped in a [LnUrlPay], this is the result of [parse] when given a LNURL-pay endpoint."],["LnUrlWithdrawRequestData","Wrapped in a [LnUrlWithdraw], this is the result of [parse] when given a LNURL-withdraw endpoint."],["LocaleOverrides","Locale-specific settings for the representation of a currency"],["LocalizedName","Localized name of a currency"],["LogEntry","Internal SDK log entry"],["LspInformation","Details of supported LSP"],["MetadataItem","Key-value pair in the [LnUrlPayRequestData], as returned by the LNURL-pay endpoint"],["NodeState","The node state of a Greenlight LN node running in the cloud"],["Payment","Represents a payment, including its [PaymentType] and [PaymentDetails]"],["Rate","Denominator in an exchange rate"],["RecommendedFees","Wrapper containing the result of the recommended fees query, based on mempool.space data"],["RouteHint","A route hint for a LN payment"],["RouteHintHop","Details of a specific hop in a larger route hint"],["Swap","Summary of an ongoing swap"],["SwapInfo","Represents the details of an on-going swap."],["Symbol","Settings for the symbol representation of a currency"],["SyncResponse","Internal response to a [NodeAPI::pull_changed] call"],["UnspentTransactionOutput","UTXO known to the LN node"]],"trait":[["EventListener","Trait that can be used to react to various [BreezEvent]s emitted by the SDK"],["FiatAPI","Trait covering fiat-related functionality"],["LspAPI","Trait covering LSP-related functionality"],["NodeAPI","Trait covering functions affecting the LN node"],["SwapperAPI","Trait covering functionality involving swaps"]]};